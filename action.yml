name: 'Create APEX Package'
description: 'Create APEX package'
branding:
  icon: arrow-down-circle
  color: blue
inputs:
  devhub-client-id:
    description: The JWT client ID for JWT authentication. Can be used in place of sfdxurl authentication. Required with `jwt-key`.
    required: false
  devhub-jwt-key:
    description: The JWT private key for JWT authentication. Can be used in place of sfdxurl authentication. Required with `client-id`.
    required: false
  devhub-url:
    description: The sfdx URL for authentication (force://xxxxxx). Can be used in place of JWT authentication.
    required: false
  org-alias:
    description: The alias to use for the organization logged in as.
    required: false
    default: myOrg

runs:
  using: "composite"
  steps:
    - name: Install Salesforce CLI
      # TODO: Add env var to specify a sfdx version
      run: |
        wget -q https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
        mkdir $HOME/sfdx && tar xJf sfdx-linux-x64.tar.xz -C $HOME/sfdx --strip-components 1 && echo "$HOME/sfdx/bin" >> $GITHUB_PATH
        sf version
      shell: bash
    - name: Devhub authentication
      run: |
        # TODO: Handle auth with Server key
        echo ${{ inputs.devhub-url }} > sfdx_auth
        sf org login sfdx-url --sfdx-url-file sfdx_auth --set-default --alias devhub
      shell: bash
    - name: Yolo
      run: |
        echo $GITHUB_PATH
        echo '***'
        echo $PATH
        echo '-----'
        sf version
      shell: bash
    - name: Hello world action step
      uses: dcuenot-sfdc/sfdx-package/plop@v1.0.6
      with:
        who-to-greet: ${{ github.action_repository }}
    #- name: Create Scratch org
    #  run: |
    #    request-id=$(sf org create scratch --target-dev-hub devhub --definition-file config/project-scratch-def.json --set-default --no-track-source --duration-days 1 --alias ${{ inputs.org-alias }} --async --json | jq .result.scratchOrgInfo.Id)
    #    echo $request-id
    #    sf org resume scratch --job-id $request-id
    #    sf org resume scratch --job-id $request-id --json
    #  shell: bash
    - name: Display Scratch org
      run: sf org display --target-org ${{ inputs.org-alias }} --verbose
      shell: bash
    - name: Delete Scratch org
      if: ${{ always() }}
      run: sf org delete scratch --target-org ${{ inputs.org-alias }} --no-prompt
      shell: bash
    